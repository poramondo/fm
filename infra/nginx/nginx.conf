worker_processes auto;
events { worker_connections 1024; }

http {
  log_format main '$remote_addr - $request "$status $body_bytes_sent" "$http_referer" "$http_user_agent"';
  error_log /var/log/nginx/error.log warn;

  # для вебсокетов/градиентов
  map $http_upgrade $connection_upgrade { default upgrade; '' close; }

  upstream frontend { server frontend:3000; }
  upstream backend  { server backend:8000; }
  upstream bot_web  { server bot:8081; }

  # --- TOR (.onion) на HTTP/80: без редиректа, проксируем как есть ---
  server {
    listen 80;
    server_name ~^.+\.onion$;

    # API
    location /api/ {
      # Вариант A: backend уже слушает /api (как у тебя)
      proxy_pass http://backend;
      # Вариант B (если надо срезать префикс): proxy_pass http://backend/;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_read_timeout 60s;

      proxy_set_header Upgrade           $http_upgrade;
      proxy_set_header Connection        $connection_upgrade;
    }

    # Webhook бота (по сути не нужен в .onion, но пусть будет)
    location /bot/webhook {
      proxy_pass http://bot_web;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      client_max_body_size 10m;
    }

    # Frontend
    location / {
      proxy_pass http://frontend/;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_set_header Upgrade           $http_upgrade;
      proxy_set_header Connection        $connection_upgrade;
    }
  }

  # --- HTTP(80): ACME + редирект для clearnet-домена ---
  server {
    listen 80 default_server;
    server_name fastmix.io www.fastmix.io;

    location /.well-known/acme-challenge/ { root /var/www/certbot; }

    location / {
      return 301 https://$host$request_uri;
    }
  }

  # --- HTTPS(443): основной сайт ---
  server {
    listen 443 ssl;
    http2 on;
    server_name fastmix.io www.fastmix.io;

    ssl_certificate     /etc/letsencrypt/live/fastmix.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/fastmix.io/privkey.pem;

    # Базовые секьюр-заголовки
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header Referrer-Policy no-referrer-when-downgrade;

    # --- Webhook Telegram ---
    location /bot/webhook {
      proxy_pass http://bot_web;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      client_max_body_size 10m;
    }

    # --- API ---
    location /api/ {
      proxy_pass http://backend;  # Вариант A (префикс /api уже в бэке)
      # proxy_pass http://backend/; # Вариант B — если нужно срезать /api

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_read_timeout 60s;

      proxy_set_header Upgrade           $http_upgrade;
      proxy_set_header Connection        $connection_upgrade;
    }

    # --- Frontend ---
    location / {
      proxy_pass http://frontend/;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_set_header Upgrade           $http_upgrade;
      proxy_set_header Connection        $connection_upgrade;
    }
  }
}
