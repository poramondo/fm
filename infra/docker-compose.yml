services:
  db:
    image: postgres:16
    env_file:
      - ../.env.db
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 10

  backend:
    build: ../backend
    env_file:
      - ../.env.backend
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"  # для локальной отладки
    volumes:
      - ../data:/data:ro   # <-- добавили для импорта CSV  
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000

  frontend:
    build: ../frontend
    env_file:
      - ../.env.frontend
    ports:
      - "3000:3000"  # для локальной отладки

  nginx:
    image: nginx:alpine
    depends_on:
      - frontend
      - backend
      - bot
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - certbot-etc:/etc/letsencrypt
      - certbot-web:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    expose:
      - "8081"   

  bot:
    build: ../bot
    env_file:
      - ../.env.bot
    depends_on:
      db:
        condition: service_healthy

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-web:/var/www/certbot

  tor:
    build: ./tor
    depends_on:
      nginx:
        condition: service_started
    volumes:
      - tor-data:/var/lib/tor
    restart: unless-stopped
   

volumes:
  db-data:
  certbot-etc:
  certbot-web:
  tor-data: